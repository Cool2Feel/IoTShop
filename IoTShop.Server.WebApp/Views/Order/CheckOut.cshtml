@model IoTShop.Server.WebApp.ViewModels.CheckOutViewModel

@{
    ViewBag.Title = "CheckOut";
}

<div class="page-header">
    <h1>Check out</h1>
</div>

@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()
    
    <section class="form-horizontal">
        <p>Give your addres for delivering.</p>

        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="control-group">
            @Html.LabelFor(model => model.LastName, htmlAttributes: new { @class = "control-label" })
            <div class="controls">
                @Html.EditorFor(model => model.LastName, new { htmlAttributes = new { @class = "input-large form-control" } })
                @Html.ValidationMessageFor(model => model.LastName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="control-group">
            @Html.LabelFor(model => model.FirstName, htmlAttributes: new { @class = "control-label" })
            <div class="controls">
                @Html.EditorFor(model => model.FirstName, new { htmlAttributes = new { @class = "input-large form-control" } })
                @Html.ValidationMessageFor(model => model.FirstName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="control-group">
            @Html.LabelFor(model => model.ZipCode, htmlAttributes: new { @class = "control-label" })
            <div class="controls">
                @Html.EditorFor(model => model.ZipCode, new { htmlAttributes = new { @class = "input-large form-control" } })
                @Html.ValidationMessageFor(model => model.ZipCode, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="control-group">
            @Html.LabelFor(model => model.Address, htmlAttributes: new { @class = "control-label" })
            <div class="controls">
                @Html.EditorFor(model => model.Address, new { htmlAttributes = new { @class = "input-large form-control" } })
                @Html.ValidationMessageFor(model => model.Address, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="control-group">
            <div class="offset2 span10">
                <input type="submit" value="Create order" class="btn btn-primary" />
                <a href="~/order/index" class="btn btn-default">Cancel</a>
            </div>
        </div>
    </section>
}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
